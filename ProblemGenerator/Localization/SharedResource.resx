<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add_ - 1 - least important" xml:space="preserve">
    <value>- 1 - least important</value>
  </data>
  <data name="Add_Add a problem" xml:space="preserve">
    <value>Add a problem</value>
  </data>
  <data name="Add_Detailed description" xml:space="preserve">
    <value>Detailed description</value>
  </data>
  <data name="Add_Place for any additional details" xml:space="preserve">
    <value>Write additional details here</value>
  </data>
  <data name="Add_Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Add_Problem picture" xml:space="preserve">
    <value>Problem photo</value>
  </data>
  <data name="Add_What" xml:space="preserve">
    <value>What</value>
  </data>
  <data name="Add_What happened?" xml:space="preserve">
    <value>What happened?</value>
  </data>
  <data name="Add_Where" xml:space="preserve">
    <value>Where</value>
  </data>
  <data name="Add_Where did it happen?" xml:space="preserve">
    <value>Where did it happen?</value>
  </data>
  <data name="Details_Add manually" xml:space="preserve">
    <value>Add manually</value>
  </data>
  <data name="Details_Archive" xml:space="preserve">
    <value>Move to archive</value>
  </data>
  <data name="Details_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Details_Getback" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Details_Mark as done" xml:space="preserve">
    <value>Mark as done</value>
  </data>
  <data name="Details_Move to current" xml:space="preserve">
    <value>Move to current</value>
  </data>
  <data name="Details_Pause task" xml:space="preserve">
    <value>Pause repeating task</value>
  </data>
  <data name="Details_problem no photo" xml:space="preserve">
    <value>No photos added</value>
  </data>
  <data name="Details_problem photo" xml:space="preserve">
    <value>Problem photo</value>
  </data>
  <data name="Details_Start task" xml:space="preserve">
    <value>Start repeating task</value>
  </data>
  <data name="Edit_discard" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Edit_Edit problem" xml:space="preserve">
    <value>Edit problem</value>
  </data>
  <data name="Edit_Update Problem" xml:space="preserve">
    <value>Update problem</value>
  </data>
  <data name="Index_Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Index_Current problems" xml:space="preserve">
    <value>Current problems</value>
  </data>
  <data name="Index_Done problems" xml:space="preserve">
    <value>Done problems</value>
  </data>
  <data name="Index_No problems found!" xml:space="preserve">
    <value>No problems found!</value>
  </data>
  <data name="Index_No tasks found!" xml:space="preserve">
    <value>No tasks found!</value>
  </data>
  <data name="Index_search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Index_search_placeholder" xml:space="preserve">
    <value>Type to search</value>
  </data>
  <data name="Index_Sort by" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="Loc_Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Loc_Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="Loc_Photos" xml:space="preserve">
    <value>Photos</value>
  </data>
  <data name="Loc_Repeat" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="MainLayout_Title" xml:space="preserve">
    <value>Problems</value>
  </data>
  <data name="NavMenu_Add a problem" xml:space="preserve">
    <value>Add a problem</value>
  </data>
  <data name="NavMenu_Add recurrent tasks" xml:space="preserve">
    <value>Add task</value>
  </data>
  <data name="NavMenu_Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="NavMenu_Current problems" xml:space="preserve">
    <value>Current problems</value>
  </data>
  <data name="NavMenu_Done problems" xml:space="preserve">
    <value>Done problems</value>
  </data>
  <data name="NavMenu_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="NavMenu_View recurrent tasks" xml:space="preserve">
    <value>View tasks</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="ProblemDeletionConfirmation" xml:space="preserve">
    <value>Do you want to remove the problem</value>
  </data>
  <data name="Problem_Date created" xml:space="preserve">
    <value>Date created</value>
  </data>
  <data name="Problem_Date solved" xml:space="preserve">
    <value>Date solved</value>
  </data>
  <data name="Problem_Days elapsed" xml:space="preserve">
    <value>Days elapsed</value>
  </data>
  <data name="Problem_Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Problem_View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Problem_What" xml:space="preserve">
    <value>What</value>
  </data>
  <data name="Problem_Where" xml:space="preserve">
    <value>Where</value>
  </data>
  <data name="Rec_Add a recurrent task" xml:space="preserve">
    <value>Add task</value>
  </data>
  <data name="Rec_Add a recurring task" xml:space="preserve">
    <value>Add a recurring task</value>
  </data>
  <data name="Rec_Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Rec_Days" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="Rec_days the repetition will be on the last day" xml:space="preserve">
    <value>days the repetition will be on the last day</value>
  </data>
  <data name="Rec_Days_L" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="Rec_day_month" xml:space="preserve">
    <value>day</value>
  </data>
  <data name="Rec_day_year" xml:space="preserve">
    <value>day</value>
  </data>
  <data name="Rec_Edit task" xml:space="preserve">
    <value>Edit task</value>
  </data>
  <data name="Rec_every" xml:space="preserve">
    <value>every</value>
  </data>
  <data name="Rec_every month on" xml:space="preserve">
    <value>every month on:</value>
  </data>
  <data name="Rec_every year on" xml:space="preserve">
    <value>every year on</value>
  </data>
  <data name="Rec_everyday" xml:space="preserve">
    <value>everyday</value>
  </data>
  <data name="Rec_Fr" xml:space="preserve">
    <value>Fr</value>
  </data>
  <data name="Rec_friday" xml:space="preserve">
    <value>friday</value>
  </data>
  <data name="Rec_if month has less than" xml:space="preserve">
    <value>If month has less than</value>
  </data>
  <data name="Rec_Is it already added" xml:space="preserve">
    <value>Is it already added</value>
  </data>
  <data name="Rec_Is it paused" xml:space="preserve">
    <value>Is it paused</value>
  </data>
  <data name="Rec_Mo" xml:space="preserve">
    <value>Mo</value>
  </data>
  <data name="Rec_monday" xml:space="preserve">
    <value>monday</value>
  </data>
  <data name="Rec_Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Rec_Months" xml:space="preserve">
    <value>Months</value>
  </data>
  <data name="Rec_Months_L" xml:space="preserve">
    <value>months</value>
  </data>
  <data name="Rec_on" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="Rec_on_t" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="Rec_Repeat" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="Rec_Repeat every" xml:space="preserve">
    <value>Repeat every</value>
  </data>
  <data name="Rec_Repeat from" xml:space="preserve">
    <value>Repeat from</value>
  </data>
  <data name="Rec_Repeat on" xml:space="preserve">
    <value>Repeat on</value>
  </data>
  <data name="Rec_Repeat summary" xml:space="preserve">
    <value>Repeat summary</value>
  </data>
  <data name="Rec_Sa" xml:space="preserve">
    <value>Sa</value>
  </data>
  <data name="Rec_saturday" xml:space="preserve">
    <value>saturday</value>
  </data>
  <data name="Rec_start repeating from" xml:space="preserve">
    <value>Start repeating from</value>
  </data>
  <data name="Rec_Su" xml:space="preserve">
    <value>Su</value>
  </data>
  <data name="Rec_sunday" xml:space="preserve">
    <value>sunday</value>
  </data>
  <data name="Rec_Th" xml:space="preserve">
    <value>Th</value>
  </data>
  <data name="Rec_The soonest date is tommorow" xml:space="preserve">
    <value>The soonest date possible is tomorrow</value>
  </data>
  <data name="Rec_thursday" xml:space="preserve">
    <value>thursday</value>
  </data>
  <data name="Rec_Tu" xml:space="preserve">
    <value>Tu</value>
  </data>
  <data name="Rec_tuesday" xml:space="preserve">
    <value>tuesday</value>
  </data>
  <data name="Rec_We" xml:space="preserve">
    <value>We</value>
  </data>
  <data name="Rec_wednesday" xml:space="preserve">
    <value>wednesday</value>
  </data>
  <data name="Rec_Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Rec_Weekly" xml:space="preserve">
    <value>weekly</value>
  </data>
  <data name="Rec_Weeks" xml:space="preserve">
    <value>Weeks</value>
  </data>
  <data name="Rec_Weeks_L" xml:space="preserve">
    <value>tygodnie</value>
  </data>
  <data name="Rec_What Must be done?" xml:space="preserve">
    <value>What must be done?</value>
  </data>
  <data name="Rec_Where" xml:space="preserve">
    <value>Where it must be done?</value>
  </data>
  <data name="Rec_Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Rec_Years" xml:space="preserve">
    <value>Years</value>
  </data>
  <data name="Rec_Years_L" xml:space="preserve">
    <value>years</value>
  </data>
  <data name="Selector_Select culture" xml:space="preserve">
    <value>Select language</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Sort_Ascending" xml:space="preserve">
    <value>Oldest first</value>
  </data>
  <data name="Sort_Descending" xml:space="preserve">
    <value>Newest first</value>
  </data>
  <data name="Sort_Priority top first" xml:space="preserve">
    <value>Priority top first</value>
  </data>
  <data name="TaskDeletionConfirmation" xml:space="preserve">
    <value>Do you want to remove the task</value>
  </data>
  <data name="Tasks_View" xml:space="preserve">
    <value>View tasks</value>
  </data>
  <data name="Val_Can't be longer than 20 characters" xml:space="preserve">
    <value>Maximum length is 20 characters - be more concise, write details in another field</value>
  </data>
  <data name="Val_Can't be longer than 30 characters" xml:space="preserve">
    <value>Maximum length is 30 characters - be more concise, write details in another field</value>
  </data>
  <data name="Val_Can't be longer than 500 characters" xml:space="preserve">
    <value>Maximum length is 500 characters - be more concise!</value>
  </data>
  <data name="Val_Field is required" xml:space="preserve">
    <value>This field is required</value>
  </data>
  <data name="Val_Maximum value is 5" xml:space="preserve">
    <value>Maximum value is 5</value>
  </data>
  <data name="Val_Minumum value is 1" xml:space="preserve">
    <value>Minimum value is 1</value>
  </data>
  <data name="Val_Must be at least 2 characters" xml:space="preserve">
    <value>Minimum length is 2 characters</value>
  </data>
  <data name="Val_Priority" xml:space="preserve">
    <value>Priority must be between 1 and 5</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>yes</value>
  </data>
</root>