
@if(true){
string color = "";
                if (problem.problemPriority == 5) color = "darkred"; //color coding by priority and days elapsed
                if (problem.problemPriority == 4) color = "red";
                if (problem.problemPriority == 3) color = "indianred";
                if (problem.problemPriority == 2) color = "lightcoral";
                int daysElapsed = problem.TimeElapsed.Days * -1;
                if (daysElapsed > 7) color = "saddlebrown";

<div class="col-lg-3 col-md-12 mb-4 mb-lg-0" style=" padding: 5px 5px 5px 5px;">
    <div class="card" style="border-color:@color; border-style:solid; border-radius: 5px; border-width: 2px;">
        <ul>
            <br>
            <li>@Loc["Problem_What"]: @problem.What</li>
            <li>@Loc["Problem_Where"]: @problem.Where</li>
            <li>@Loc["Problem_Date created"]: @problem.DateCreated.ToString("yyyy-MM-dd")</li>
            <li>@Loc["Problem_Days elapsed"]: @daysElapsed</li>
            <li>@Loc["Problem_Priority"]: @problem.problemPriority</li>
        </ul>
        @* <button class="btn btn-outline-secondary" style="border-color:@color;" @onclick="() => viewDetails(problem.Id)">@Loc["Problem_View"]</button>  *@
    @ChildContent
    </div>

</div>
}

@code {
    [Parameter]
    public Problem problem { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    

    string locTitle = "";
    protected override async Task OnParametersSetAsync()
    {
        //locTitle = @Loc[$"{Title}"];
    }

    
}
