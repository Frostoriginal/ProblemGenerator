@using ProblemGenerator.Controllers;
@using ProblemGenerator.Data;
@inject ProblemContext problemContext 
@inject ProblemServices service
@inject NavigationManager NavigationManager
@page "/Add"



<PageTitle>Add a problem</PageTitle>

<h1>Add a problem</h1>



<div class="col-5 bg-light m-2 justify-content-start">

    <div class="p-3 mb-3 bg-primary text-white text-center">Add New Problem</div>

    <EditForm Model="@NewProblem">
        <div class="form-group">
            <label for="name">What</label>
            <input type="text" id="what" class="form-control" @bind-value="@NewProblem.What" />
        </div>

        <div class="form-group">
            <label for="name">Where</label>
            <input type="text" id="where" class="form-control" @bind-value="@NewProblem.Where" />
        </div>

        <div class="form-group">
            <label for="name">Detailed description</label>
            <input type="text" id="name" class="form-control" @bind-value="@NewProblem.DetailedDescription" />
        </div>


        <div class="text-center p-3 mb-3">
            <button class="btn btn-info" @onclick="AddNewProblem"> Add Problem</button>
        </div>
    </EditForm>
</div>




@code {


    List<Problem> Problems = new List<Problem>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProblems();
    }

    private async Task RefreshProblems()
    {
        Problems = await service.GetProblemsAsync();
    }

    public Problem NewProblem { get; set; } = new Problem();



    private async Task AddNewProblem()
    {
        NewProblem.DateCreated = DateTime.Now;
        await service.AddNewProblem(NewProblem);
        NewProblem = new Problem();
        
        await RefreshProblems();
        NavigationManager.NavigateTo("/", true);
    }

    Problem UpdateProblem = new Problem();
    private void SetProblemForUpdate(Problem problem)
    {
        UpdateProblem = problem;
    }

    private async Task UpdateProblemData()
    {
        await service.UpdateProblemAsync(UpdateProblem);
        await RefreshProblems();
    }

    private async Task DeleteProblem(Problem problem)
    {
        await service.DeleteProblemAsync(problem);
        await RefreshProblems();
    }

}
