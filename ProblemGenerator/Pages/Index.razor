
@page "/"
@using ProblemGenerator;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="main">
    <div>
    <h1>Current problems</h1> <span>Sort dropdown menu placeholder</span> 
    </div>
    @*
  <ul> 
    @if (problems != null)
    {
            @foreach (var problem in problems.Where(s => s.IsSolved == false && s.IsArchived == false))
      {
        <li>
          <div class="problem-info">
              <span class="title">@problem.What</span> ||
              @problem.Where ||
               Date added @problem.DateCreated.ToString("yyyy-MM-dd") ||             
                <span class="title">Days elapsed @problem.TimeElapsed.Days</span>
          </div>
        </li>
      }
    }
  </ul>
    *@



    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Id</th>
                    <th>What</th>
                    <th>Where</th>
                    <th>Date created</th>
                    <th>Time elapsed</th>
                    <th>Priority</th>
                    <th>Details</th>
                    
                </tr>
            </thead>
            <tbody>
            @if (problems != null)
                {
                @foreach (var problem in problems.Where(s => s.IsSolved == false))
                    {
                        int daysElapsed = problem.TimeElapsed.Days * -1;
                        <tr >
                            <td>@problem.Id</td>
                            <td>@problem.What</td>
                            <td>@problem.Where</td>
                            <td>@problem.DateCreated.ToString("yyyy-MM-dd")</td>
                            <td>@daysElapsed</td>
                            <td>@problem.problemPriority</td>

                            <td><a href="details/@problem.Id"><button class="btn btn-outline-secondary">View</button></a></td>
                        
                            
                            
                        </tr>
                        
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No problems to solve!</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
</div>



@code{ 
    //ciag dalszy-> https://learn.microsoft.com/en-us/training/modules/interact-with-data-blazor-web-apps/7-exercise-share-data-in-blazor-applications

    List<Problem> problems = new();
   
    protected override async Task OnInitializedAsync()
    {
        problems = await HttpClient.GetFromJsonAsync<List<Problem>>(NavigationManager.BaseUri + "problems");
        
    }
    

}

